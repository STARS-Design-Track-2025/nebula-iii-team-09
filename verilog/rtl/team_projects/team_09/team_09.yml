info:
  name: team_09
  description: Sample Team Project for STARS students
  repo: STARS-Design-Track-2025/nebula-iii.git
  owner: Purdue University
  license: APACHE 2.0
  author: Miguel Isrrael Teran, Aidan Jacobsen
  email: misrrael@purdue.edu, jacobse7@purdue.edu
  version: v1.0.0
  date: 28-05-2024
  category: digital
  tags:
    - team_09
  bus:
    - wb
  type: soft
  status: verified
  qualification: N/A
  cell_count: N/A
  width: 0.0
  height: 0.0
  technology: N/A
  clock_freq_mhz: 40
  digital_supply_voltage: n/a
  analog_supply_voltage: n/a

# Feel free to change these two values if you want to use 
# the Wishbone bus or the Logic Analyzer.  If you switch
# these, just rerun "make bus-wrap-generate"
# To use either of these, you will also need to uncomment 
# the corresponding lines in team_09.sv.
project_info:
  wb_master_enabled: False
  la_enabled: False

# IMPORTANT: Do NOT manually edit the (external_interface) LA or WB Master signals. 
# Use the project_info keys above.
# You can check out what those keys do in /scripts/team_configuration.py, but basically they will 
# adjust this file and the wrapper file to cleanly enable and disable the WB / LA signals.
# To add registers check out "registers" and "flags" and "ports" below 
external_interface:
#   - name: la_data_in
#    port: la_data_in
#    width: 32
#    direction: input
#    description: Inputs from the Logic Analyzer
#   - name: la_data_out
#    port: la_data_out
#    width: 32
#    direction: output
#    description: Outputs from the Logic Analyzer
#   - name: la_oenb
#    port: la_oenb
#    width: 32
#    direction: input
#    description: Output Enable from the Logic Analyzer
  - name: gpio_in
    port: gpio_in
    width: 34
    direction: input
    description: Inputs from GPIO
  - name: gpio_out
    port: gpio_out
    width: 34
    direction: output
    description: Outputs to GPIO
  - name: gpio_oeb
    port: gpio_oeb
    width: 34
    direction: output
    description: Output enables to GPIO
#   - name: DAT_I
#    port: DAT_I
#    width: 32
#    direction: input
#    description: Wishbone Master Signals
#   - name: ACK_I
#    port: ACK_I
#    width: 1
#    direction: input
#    description: Wishbone Master Signals
#   - name: ADR_O
#    port: ADR_O
#    width: 32
#    direction: output
#    description: Wishbone Master Signals
#   - name: DAT_O
#    port: DAT_O
#    width: 32
#    direction: output
#    description: Wishbone Master Signals
#   - name: SEL_O
#    port: SEL_O
#    width: 4
#    direction: output
#    description: Wishbone Master Signals
#   - name: WE_O
#    port: WE_O
#    width: 1
#    direction: output
#    description: Wishbone Master Signals
#   - name: STB_O
#    port: STB_O
#    width: 1
#    direction: output
#    description: Wishbone Master Signals
#   - name: CYC_O
#    port: CYC_O
#    width: 1
#    direction: output
#    description: Wishbone Master Signals

clock:
  name: clk

reset:
  name: nrst
  level: 0

# Feel free to add or change these registers as you see fit.  
# This is an easy way to allow you to set parameters for your project.
# For example, if you create a register here, you can write its value
# from the C file that you will eventually write.  Also see "Ports" below.
registers:
  - name: EN_VAL
    size: 1
    mode: w
    fifo: false
    offset: 0
    bit_access: false
    write_port: en
    description: Enables or disables team design
# See "Registers" above.  These must be used together
ports:
  - name: en
    width: 1
    direction: input
    description: Enables or disables team design

# Feel free to add flags as you see fit.
# flags: